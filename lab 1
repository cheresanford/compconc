#include <stdio.h>
#include <pthread.h>
#define TAMANHOVETOR 50
#define NTHREADS 2


int vetor[TAMANHOVETOR];


//funcao que a thread ira executar
void * tarefa (void * arg) {
	int cont = * (int *) arg;
	for(int i = cont ; i < TAMANHOVETOR ; i = i + 2) {
		vetor[i]++;
		} 
	pthread_exit(NULL);
}



//funcao principal

int main(void) {
	pthread_t tid[NTHREADS]; //id da thread no sistema
	int ident[NTHREADS];
	
	//inicializacao do vetor
	for (int i = 0; i < TAMANHOVETOR; i++) {
		vetor[i] = i+1;
		}
	
	//CRIA AS THREADS NOVAS
	for(int i = 0 ; i < NTHREADS; i++) {
		ident[i] = i;
		if (pthread_create(&tid[i], NULL, tarefa, (void *)&ident[i]))
			printf("Erro -- pthread_create\n"); }
	//Espera as threads terminarem
	for(int i = 0 ; i < NTHREADS; i++) {
		if (pthread_join(tid[i], NULL))
			printf("Erro -- pthread_create\n"); }
	//valores finais do vetor
	printf("Vetor final: \n");
	for (int i = 0; i < TAMANHOVETOR; i++) {
		printf("%d ", vetor[i]);
		}
	printf("\n");
	
	//desvincula o termino da main do termino do programa
	pthread_exit(NULL);
	return 0;
	}
